#include <iostream>
#include <algorithm>
using namespace std;

struct Process {
    int id, at, bt, pr, wt, tat, ct;
};

bool compare(Process a, Process b) {
    return (a.pr < b.pr) || (a.pr == b.pr && a.at < b.at);
}

int main() {
    int n;
    cout << "Enter the number of processes: ";
    cin >> n;

    Process p[n];
    cout << "Enter Arrival Time, Burst Time, and Priority for each process:\n";
    for (int i = 0; i < n; i++) {
        p[i].id = i + 1;
        cin >> p[i].at >> p[i].bt >> p[i].pr;
    }

    sort(p, p + n, compare);

    int time = 0;
    float total_wt = 0, total_tat = 0;

    for (int i = 0; i < n; i++) {
        if (time < p[i].at) time = p[i].at; // Wait for the process to arrive
        time += p[i].bt;
        p[i].ct = time;
        p[i].tat = p[i].ct - p[i].at;
        p[i].wt = p[i].tat - p[i].bt;

        total_wt += p[i].wt;
        total_tat += p[i].tat;
    }

    cout << "\nProcess\tAT\tBT\tPR\tWT\tTAT\n";
    for (int i = 0; i < n; i++) {
        cout << p[i].id << '\t' << p[i].at << '\t' << p[i].bt << '\t'
             << p[i].pr << '\t' << p[i].wt << '\t' << p[i].tat << '\n';
    }

    cout << "\nAverage Waiting Time: " << total_wt / n;
    cout << "\nAverage Turnaround Time: " << total_tat / n;

    return 0;
}
